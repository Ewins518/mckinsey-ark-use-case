# Example values for {{ .Values.mcpServerName }} MCP Server

replicaCount: 2

image:
  repository: {{ .Values.mcpServerName }}
  pullPolicy: Always
  tag: "v1.0.0"

service:
  type: ClusterIP
  port: 8080

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 256Mi

{{- if .Values.requiresAuth }}
# Authentication configuration
auth:
  token: "your-auth-token-here"
  # Or use existing secret:
  # existingSecret: "my-auth-secret"
  # existingSecretKey: "token"
{{- end }}

{{- if .Values.hasCustomConfig }}
# Custom configuration
config:
  customValue: "custom-configuration-value"
{{- end }}

# MCP Server configuration
mcpServer:
  create: true
  name: "{{ .Values.mcpServerName }}-server"
  description: "{{ .Values.description }}"
  path: "/mcp"

# Enable autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Node selection
nodeSelector:
  kubernetes.io/arch: amd64

# Tolerations
tolerations:
  - key: "node-role.kubernetes.io/worker"
    operator: "Exists"
    effect: "NoSchedule"

# Affinity rules
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - {{ .Values.mcpServerName }}
        topologyKey: kubernetes.io/hostname