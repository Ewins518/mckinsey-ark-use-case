apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: postgres-memory-hurl
spec:
  timeouts:
    exec: 60s
  description: Test PostgreSQL Memory Service using Hurl
  steps:
  - name: setup
    try:
    - script:
        skipLogOutput: true
        content: |
          set -u
          echo "{\"token\": \"$E2E_TEST_AZURE_OPENAI_KEY\", \"url\": \"$E2E_TEST_AZURE_OPENAI_BASE_URL\"}"
        outputs:
        - name: azure
          value: (json_parse($stdout))
    - apply:
        file: manifests/a00-rbac.yaml
    - apply:
        file: manifests/a04-secret.yaml
    - apply:
        file: manifests/a05-model.yaml
    - script:
        skipLogOutput: true
        content: cat test.hurl
        outputs:
        - name: test_script
          value: ($stdout)
    - apply:
        resource:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: hurl-test-files
          data:
            test.hurl: ($test_script)
    - apply:
        resource:
          apiVersion: v1
          kind: Pod
          metadata:
            name: postgres-memory-test
          spec:
            containers:
            - name: test-client
              image: ghcr.io/orange-opensource/hurl:6.1.1
              command: ["sleep", "300"]
              volumeMounts:
              - name: test-files
                mountPath: /tests
            volumes:
            - name: test-files
              configMap:
                name: hurl-test-files
            restartPolicy: Never
            terminationGracePeriodSeconds: 0
    - script:
        content: |
          helm install postgres-memory ../chart --wait --timeout=90s \
            --namespace $NAMESPACE \
            --set image.repository=${POSTGRES_MEMORY_IMAGE:-postgres_memory} \
            --set image.tag=${POSTGRES_MEMORY_IMAGE_TAG:-latest}
        env:
        - name: NAMESPACE
          value: ($namespace)
    cleanup:
    - script:
        content: |
          helm uninstall postgres-memory --namespace $NAMESPACE --wait --timeout=30s || true
        env:
        - name: NAMESPACE
          value: ($namespace)

  - name: wait-for-resources
    try:
    - assert:
        resource:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: postgres-memory
          status:
            readyReplicas: 1
    - assert:
        resource:
          apiVersion: postgres-operator.crunchydata.com/v1beta1
          kind: PostgresCluster
          metadata:
            name: postgres-memory-postgres
          status:
            (instances[0].readyReplicas): 1
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Model
          metadata:
            name: test-model
          status:
            phase: ready
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Memory
          metadata:
            name: postgres-memory
          status:
            phase: ready
    - assert:
        resource:
          apiVersion: v1
          kind: Pod
          metadata:
            name: postgres-memory-test
          status:
            phase: Running

  - name: run-hurl-tests
    try:
    - script:
        content: |
          kubectl exec postgres-memory-test -n $NAMESPACE -- hurl --test /tests/test.hurl
        env:
        - name: NAMESPACE
          value: ($namespace)
        timeout: 120s

  - name: setup-agent-and-query
    try:
    - apply:
        file: manifests/a06-agent.yaml
    - apply:
        file: manifests/a07-query.yaml

  - name: test-ark-integration
    try:
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Agent
          metadata:
            name: memory-agent
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Query
          metadata:
            name: memory-test-query
          status:
            phase: done
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Query
          metadata:
            name: memory-test-query
          status:
            (length(responses)): 1

  - name: validate-query-response-content
    try:
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Query
          metadata:
            name: memory-test-query
          status:
            (contains(responses[0].content, 'memory')): true
            (contains(responses[0].content, 'conversation')): true